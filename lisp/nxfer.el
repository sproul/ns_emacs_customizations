(provide 'nxfer)

(defun nxfer-go( &optional isGet diff-mode)
  (or (buffer-file-name)
      (error "nxfer-put: ")
      )
  (save-some-buffers t)
  (let(
       (fn (n-host-to-canonical (buffer-file-name)))
       )
    (require 'nstr)
    ;; these days I'm mostly moving from work/event_horizon/site/db/hibernate_generated_code, and it is all java that concerns me
    ;;(setq fn (nstr-replace-regexp fn ".java$" ".class"))

    (require 'n-host)
    (n-host-shell-cmd-visible (concat (if isGet "get " "put ") (if diff-mode "-diff " "") fn))

    (cond
     ((and (not  isGet)
	   (string-match "resume.cgi$" fn)
	   )
      (setq fn (nstr-replace-regexp fn ".cgi$" ""))

      (setq fn (nstr-replace-regexp fn "/cgi-bin/" "/httpdocs/resume/"))
      (n-host-shell-cmd-visible (concat "put " fn ".html"))
      (n-host-shell-cmd-visible (concat "put " fn ".txt"))

      (setq fn (nstr-replace-regexp fn "/resume$" "/projects"))
      (n-host-shell-cmd-visible (concat "put " fn ".html"))
      (n-host-shell-cmd-visible "verify_links $HOME/work/adyn.com/cgi-bin/resume.cgi")
      )

     ((and (not  isGet)
	   (string-match "__shared_cs.js$" fn)
	   )
      (setq fn (nstr-replace-regexp fn "__shared_cs.js$" "__shared_c.js"))
      (n-host-shell-cmd-visible (concat "put " fn))
      (setq fn (nstr-replace-regexp fn  "__shared_c.js$" "__shared_s.js"))
      (n-host-shell-cmd-visible (concat "put " fn))
      )
     )
    )
  )

(defun nxfer-put( &optional arg)
  (interactive "P")
  (if (not arg)
      (setq arg ?p)
    (message "a-ll_dc, d-if, g-et, p-ut")
    (setq arg (read-char))
    )
  (cond
   ((= arg ?a)
    (n-host-shell-cmd-visible (format "put.all_dc %s" (n-host-to-canonical (buffer-file-name))))
    )
   ((= arg ?d)
    (n-host-shell-cmd-visible (format "dif %s" (n-host-to-canonical (buffer-file-name))))
    )
   ((= arg ?g)
    (nxfer-go t)
    )
   ((= arg ?p)
    (nxfer-go)
    )
   )
  )
(defun nxfer-get( &optional arg)
  (interactive "P")
  (nxfer-go t arg)
  )
